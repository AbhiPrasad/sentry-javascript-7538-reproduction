{"version":3,"file":"map-otel-status.js","sources":["../../../src/utils/map-otel-status.ts"],"sourcesContent":["import type { Span as OtelSpan } from '@opentelemetry/sdk-trace-base';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport type { SpanStatusType as SentryStatus } from '@sentry/tracing';\n\n// canonicalCodesHTTPMap maps some HTTP codes to Sentry's span statuses. See possible mapping in https://develop.sentry.dev/sdk/event-payloads/span/\nconst canonicalCodesHTTPMap: Record<string, SentryStatus> = {\n  '400': 'failed_precondition',\n  '401': 'unauthenticated',\n  '403': 'permission_denied',\n  '404': 'not_found',\n  '409': 'aborted',\n  '429': 'resource_exhausted',\n  '499': 'cancelled',\n  '500': 'internal_error',\n  '501': 'unimplemented',\n  '503': 'unavailable',\n  '504': 'deadline_exceeded',\n} as const;\n\n// canonicalCodesGrpcMap maps some GRPC codes to Sentry's span statuses. See description in grpc documentation.\nconst canonicalCodesGrpcMap: Record<string, SentryStatus> = {\n  '1': 'cancelled',\n  '2': 'unknown_error',\n  '3': 'invalid_argument',\n  '4': 'deadline_exceeded',\n  '5': 'not_found',\n  '6': 'already_exists',\n  '7': 'permission_denied',\n  '8': 'resource_exhausted',\n  '9': 'failed_precondition',\n  '10': 'aborted',\n  '11': 'out_of_range',\n  '12': 'unimplemented',\n  '13': 'internal_error',\n  '14': 'unavailable',\n  '15': 'data_loss',\n  '16': 'unauthenticated',\n} as const;\n\n/**\n * Get a Sentry span status from an otel span.\n *\n * @param otelSpan An otel span to generate a sentry status for.\n * @returns The Sentry span status\n */\nexport function mapOtelStatus(otelSpan: OtelSpan): SentryStatus {\n  const { status, attributes } = otelSpan;\n\n  const httpCode = attributes[SemanticAttributes.HTTP_STATUS_CODE];\n  const grpcCode = attributes[SemanticAttributes.RPC_GRPC_STATUS_CODE];\n\n  const code = typeof httpCode === 'string' ? httpCode : typeof httpCode === 'number' ? httpCode.toString() : undefined;\n  if (code) {\n    const sentryStatus = canonicalCodesHTTPMap[code];\n    if (sentryStatus) {\n      return sentryStatus;\n    }\n  }\n\n  if (typeof grpcCode === 'string') {\n    const sentryStatus = canonicalCodesGrpcMap[grpcCode];\n    if (sentryStatus) {\n      return sentryStatus;\n    }\n  }\n\n  const statusCode = status.code;\n  if (statusCode === 0 || statusCode === 1) {\n    return 'ok';\n  }\n\n  return 'unknown_error';\n}\n"],"names":[],"mappings":";;AAIA;AACA,MAAA,qBAAA,GAAA;AACA,EAAA,KAAA,EAAA,qBAAA;AACA,EAAA,KAAA,EAAA,iBAAA;AACA,EAAA,KAAA,EAAA,mBAAA;AACA,EAAA,KAAA,EAAA,WAAA;AACA,EAAA,KAAA,EAAA,SAAA;AACA,EAAA,KAAA,EAAA,oBAAA;AACA,EAAA,KAAA,EAAA,WAAA;AACA,EAAA,KAAA,EAAA,gBAAA;AACA,EAAA,KAAA,EAAA,eAAA;AACA,EAAA,KAAA,EAAA,aAAA;AACA,EAAA,KAAA,EAAA,mBAAA;AACA,CAAA,EAAA;AACA;AACA;AACA,MAAA,qBAAA,GAAA;AACA,EAAA,GAAA,EAAA,WAAA;AACA,EAAA,GAAA,EAAA,eAAA;AACA,EAAA,GAAA,EAAA,kBAAA;AACA,EAAA,GAAA,EAAA,mBAAA;AACA,EAAA,GAAA,EAAA,WAAA;AACA,EAAA,GAAA,EAAA,gBAAA;AACA,EAAA,GAAA,EAAA,mBAAA;AACA,EAAA,GAAA,EAAA,oBAAA;AACA,EAAA,GAAA,EAAA,qBAAA;AACA,EAAA,IAAA,EAAA,SAAA;AACA,EAAA,IAAA,EAAA,cAAA;AACA,EAAA,IAAA,EAAA,eAAA;AACA,EAAA,IAAA,EAAA,gBAAA;AACA,EAAA,IAAA,EAAA,aAAA;AACA,EAAA,IAAA,EAAA,WAAA;AACA,EAAA,IAAA,EAAA,iBAAA;AACA,CAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAA,aAAA,CAAA,QAAA,EAAA;AACA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,GAAA,QAAA,CAAA;AACA;AACA,EAAA,MAAA,QAAA,GAAA,UAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,CAAA;AACA,EAAA,MAAA,QAAA,GAAA,UAAA,CAAA,kBAAA,CAAA,oBAAA,CAAA,CAAA;AACA;AACA,EAAA,MAAA,IAAA,GAAA,OAAA,QAAA,KAAA,QAAA,GAAA,QAAA,GAAA,OAAA,QAAA,KAAA,QAAA,GAAA,QAAA,CAAA,QAAA,EAAA,GAAA,SAAA,CAAA;AACA,EAAA,IAAA,IAAA,EAAA;AACA,IAAA,MAAA,YAAA,GAAA,qBAAA,CAAA,IAAA,CAAA,CAAA;AACA,IAAA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,YAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA;AACA,EAAA,IAAA,OAAA,QAAA,KAAA,QAAA,EAAA;AACA,IAAA,MAAA,YAAA,GAAA,qBAAA,CAAA,QAAA,CAAA,CAAA;AACA,IAAA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,YAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA;AACA,EAAA,MAAA,UAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AACA,EAAA,IAAA,UAAA,KAAA,CAAA,IAAA,UAAA,KAAA,CAAA,EAAA;AACA,IAAA,OAAA,IAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,eAAA,CAAA;AACA;;;;"}